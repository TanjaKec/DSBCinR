plot(price, levels = names, type="l")
plot(price~date*name, type="l")
plot(price[nme=="Caran d'Ache Pencil Extender"])~date[name=="Caran d'Ache Pencil Extender"])
plot(price[nme=="Caran d'Ache Pencil Extender"]~date[name=="Caran d'Ache Pencil Extender"])
plot(price[name=="Caran d'Ache Pencil Extender"]~date[name=="Caran d'Ache Pencil Extender"])
plot(price[name=="Caran d'Ache Pencil Extender"]~date[name=="Caran d'Ache Pencil Extender"], type="l")
date[name=="Caran d'Ache Pencil Extender"]
t(date[name=="Caran d'Ache Pencil Extender"])
t(t(date[name=="Caran d'Ache Pencil Extender"]))
t(t(t(date[name=="Caran d'Ache Pencil Extender"])))
date[name=="Caran d'Ache Pencil Extender"]
price[name=="Caran d'Ache Pencil Extender"]
interaction.plot(name=="Caran d'Ache Pencil Extender", as.factor(date[name=="Caran d'Ache Pencil Extender"]), price[name=="Caran d'Ache Pencil Extender"])
price[name=="Caran d'Ache Pencil Extender"]
?length
length(price[name=="Caran d'Ache Pencil Extender"])
length(as.factor(date[name=="Caran d'Ache Pencil Extender"]))
length(name=="Caran d'Ache Pencil Extender"))
length(name=="Caran d'Ache Pencil Extender")
length(name)
length(name[name=="Caran d'Ache Pencil Extender"])
interaction.plot(name[name=="Caran d'Ache Pencil Extender"], as.factor(date[name=="Caran d'Ache Pencil Extender"]), price[name=="Caran d'Ache Pencil Extender"])
interaction.plot(as.factor(date[name=="Caran d'Ache Pencil Extender"]), name[name=="Caran d'Ache Pencil Extender"], price[name=="Caran d'Ache Pencil Extender"])
name[name=="Caran d'Ache Pencil Extender"]
prod<-as.factor(name[name=="Caran d'Ache Pencil Extender"])
interaction.plot(as.factor(date[name=="Caran d'Ache Pencil Extender"]), prod, price[name=="Caran d'Ache Pencil Extender"])
prod
levs
levels
levels(prod)
prod<-as.factor(name[name=="Caran d'Ache Pencil Extender"])
rm(pro)
rm(prod)
prod<-names[supply(names=="Staedtler Noris Eco Pencil")]
prod<-names[sapply(names=="Staedtler Noris Eco Pencil")]
prod<-names[sapply(names=="Staedtler Noris Eco Pencil"), is.factor]
prod<-as.factor(name[name=="Caran d'Ache Pencil Extender"])
levels(prod)<-c("Caran d'Ache Pencil Extender")
levels(prod)<-c("1")
prod<-as.factor(name[name=="Caran d'Ache Pencil Extender"])
rm(prod)
prod<-name[name=="Caran d'Ache Pencil Extender"]
prod
prod<-as.factor(name[name=="Caran d'Ache Pencil Extender"])=F
rm(prod)
prod<-as.factor(name[name=="Caran d'Ache Pencil Extender"])
prod<-as.character(name[name=="Caran d'Ache Pencil Extender"])
prod
interaction.plot(as.factor(date[name=="Caran d'Ache Pencil Extender"]), prod, price[name=="Caran d'Ache Pencil Extender"])
interaction.plot(as.caracter(date[name=="Caran d'Ache Pencil Extender"]), prod, price[name=="Caran d'Ache Pencil Extender"])
interaction.plot(as.character(date[name=="Caran d'Ache Pencil Extender"]), prod, price[name=="Caran d'Ache Pencil Extender"])
date[name=="Caran d'Ache Pencil Extender"]
price[name=="Caran d'Ache Pencil Extender"])
price[name=="Caran d'Ache Pencil Extender"]
category<-c("Place", "Vernacular", "Energy", "Culture", "Systems")#
score<-c(5, 4, 3, 5, 2)#
myd<-data.frame(category, score)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 1)
library(ggplot2)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 1)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 0)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 0.5)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 0.8)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 0.95)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 0.99)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 0.97)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 2)
myd
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 5)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = 1)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97)
last_plot() + scale_y_continuous(breaks = 0:10) + coord_polar()#
labs(x = "", y = "")#
#theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97)
?ggplot
ggplot(myd, aes(category, weight=score, fill = category, lty=2)) +#
geom_bar(width = .97)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97, lty=2)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97, lty=1)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97, lty=5)
last_plot() + scale_y_continuous(breaks = 0:10) + coord_polar(lty=1)
last_plot(lty=1) + scale_y_continuous(breaks = 0:10) + coord_polar()
col=c(1)
2
col=c(1,2,3,4,5)
myd<-data.frame(myd, col)
myd
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97, lty=5)
ggplot(myd, aes(category, weight=score, fill = category)) +#
geom_bar(width = .97)
ggplot(myd, aes(category, weight=score, fill = category, colour=col)) +#
geom_bar(width = .97)
ggplot(myd, aes(category, weight=score, fill = category colour=1)) +#
geom_bar(width = .97, lty=5)
ggplot(myd, aes(category, weight=score, fill = category colour=c(1,1,1,1,1)) +#
geom_bar(width = .97, lty=5)
ggplot(myd, aes(category, weight=score, fill = category, colour=col)) +#
geom_bar(width = .97)
ggplot(myd, aes(category, weight=score, fill = category, colour=c(1,1,1,1,1)) +#
geom_bar(width = .97, lty=5)
)
ggplot(myd, aes(category, weight=score, fill = category, colour=c(1,1,1,1,1)) +#
geom_bar(width = .97, lty=5)
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1)
ggplot(myd, aes(category, weight=score, fill = category, colour=c(1,1,1,1,1))) + geom_bar(width = 1)
ggplot(myd, aes(category, weight=score, fill = category, colour=c(1,1,1,1,1))) + geom_bar(width = 0.97)
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1)
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, colour=c(1,1,1,1,1))
last_plot() + scale_y_continuous(breaks = 0:10) + coord_polar()#
labs(x = "", y = "")
myd
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, colour=c(1,1,1,1,1))#
last_plot() + scale_y_continuous(breaks = 0:10) + coord_polar()#
labs(x = "", y = "")
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = .98, colour=c(1,1,1,1,1))#
last_plot() + scale_y_continuous(breaks = 0:10) + coord_polar()#
labs(x = "", y = "")
library(rgbif)
f2 <- function(a, b) {#
  a * 10#
}#
f2(10, stop("This is an error!"))
# need scrapearchive.R first so that function scrapearchive is known#
# will extract pencil names and prices from archived pages#
#
library(rvest)#
# overview <- html("https://web.archive.org/web/*/http://www.cultpens.com/acatalog/Pencils.html")#
# overview <- html("https://web.archive.org/web/20130101000000*/http://www.cultpens.com/acatalog/Pencils.html")#
# 2013  https://web.archive.org/web/20130101000000*/http://www.cultpens.com/acatalog/Pencils.html#
#
# archive.org doesn't use css, so can't use rvest?#
#
urls <-#
  overview %>% #
  html_nodes("date captures") %>%#
  html_text()#
# overview <- readLines("http://web.archive.org/web/*/http://www.cultpens.com/acatalog/Pencils.html")#
overview <- readLines("http://web.archive.org/web/20130101000000*/http://www.cultpens.com/acatalog/Pencils.html")#
#
# Get lines with links#
htmllines <- overview[grep("<a href=\"/web/20", overview)]#
# \/web.*\.html#
# \/ matches the character / literally#
# . matches any character (except newline)#
# Quantifier: * Between zero and unlimited times#
# can check at https://regex101.com#
#
# get address out #
# R needs escape characters escaped!!!!!#
relativeaddress <- regmatches(htmllines, gregexpr("\\/web.*\\.html",htmllines))#
absoluteaddress <- paste0 ("https://web.archive.org", relativeaddress)#
#
#http://nicercode.github.io/guides/repeating-things/#
result <- lapply(absoluteaddress, scrapearchive)#
#head( do.call(rbind, result) )#
test <- do.call(rbind, result) #
#
# test$date <- as.Date(test$date, "%Y%m%d")#
#
# Save to a file#
save(test, file = "test.R")
?in_dir
??in_dir
t
t()
?t
source(t)
mean
rowMeans
t.test
UseMethod():mean
UseMethod(mean)
library(pryr)
ftype(t)
ftype(t.test)
methods("t")
methods("t.test")
?UseMethod():
?UseMethod()
UseMethod(t)
UseMethod(t.test)
UseMethod("t.test")
getAnywhere(t)
methods(t)
methods(t.ts)
get.Anyway(t.ts)
get.Anywhere(t.ts)
getAnywhere()
getAnywhere(t.ts)
getAnywhere(t.test)
methods(t.test)
getAnywhere(t.test.formula)
?t.test
getAnywhere(t.test.default)
?:::
t.test:::
t
?t
base:::t
UseMethod("t")
method("t")
methods("t")
methods("t.test")
methods(class="default")
methods(class="formula")
library(datasets)
data(motorcar)
mtcars
mtcars$cyl
?ouliers
attach (mtcars)
cyl$outliers
outliers
?outliers
??outliers
library(ggplot2)
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(0, 0, 0, 0, 0)#
myd<-data.frame(category, score)#
#
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8)#
#
last_plot() + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(2, 3, 5, 1, 4)#
myd<-data.frame(category, score)#
#
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8)#
#
last_plot() + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(2, 3, 5, 1, 4)#
myd<-data.frame(category, score)#
#
ggplot(aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8)#
#
last_plot() + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(2, 3, 5, 1, 4)#
myd<-data.frame(category, score)#
#
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8)#
#
last_plot() + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(2, 3, 5, 1, 4)#
myd<-data.frame(category, score)#
#
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8) + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(2, 3, 5, 1, 4)#
ggplot(data.frame(category, score), aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8) + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
ggplot(data.frame(category, score <- c(2, 2, 2, 2, 2), aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8) + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(2, 3, 5, 1, 4)#
ggplot(data.frame(category, score), aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8) + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
#
ggplot(data.frame(category, score <- c(2, 2, 2, 2, 2)), aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8) + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
#
ggplot(data.frame(category, score <- c(2, 2, 2, 2, 2)), aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8)
?barchart
piechart
mytab <- table(category, score)
barplot(mytab)
plot(score, category)
plot(score~category)
plot(category~score)
plot(score)
library(shiny)
rm(list=ls())#
library(ggplot2)
category<-c("Culture", "Energy", "Placeness", "Systems", "Vernacular")#
score<-c(0, 0, 0, 0, 0)#
myd<-data.frame(category, score)#
#
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, color=1, lwd=0.8)#
#
last_plot() + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="white", size=0.2), legend.position = "bottom", axis.ticks.y=element_line(size=0), axis.ticks = element_blank(), axis.text.x=element_text(size=8, face="bold"),  axis.text.y=element_text(size=0))
quartz()#
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, alpha=.85, color=1, lwd=0.8)#
#
last_plot() + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="gray", size=0.1), legend.position = "none", axis.ticks.y=element_line(size=0), axis.text.x=element_text(size=0),  axis.text.y=element_text(size=0)) + facet_wrap( ~ category, ncol = 5)#
#=======================================
ggplot(myd, aes(category, weight=score, fill = category)) + geom_bar(width = 1, alpha=.85, color=1, lwd=0.8) + scale_fill_brewer(palette = "Set1") + geom_hline(yintercept=seq(0, 5, by=1), colour = "black", size = 0.2) + scale_y_continuous(breaks = 0:5) + theme_linedraw() + coord_polar()  + labs(x = "", y = "") + theme(panel.grid.major = element_line(color="gray", size=0.1), legend.position = "none", axis.ticks.y=element_line(size=0), axis.text.x=element_text(size=0),  axis.text.y=element_text(size=0)) + facet_wrap( ~ category, ncol = 5)
SUM(SCORE)
sum(score)
CRANpackages <- c("dplyr", "shiny", "plotly", "xts", "highcharter", "DiagrammeR", "dygraphs",#
                  "ggplot2", "htmlwidgets", "leaflet", "viridis")#
#
install.packages(CRANpackages)#
#
require(devtools)#
install_github('ramnathv/rCharts', force=TRUE)#
#
install_github('ekstroem/MESS', force=TRUE)
library(shiny)#
runGitHub('ekstroem/ShinyLeastSquares')
source("http://biostatistics.dk/useR2016pack.R")
data(airquality)#
aq <- subset(airquality, Month==6)#
head(aq)#
#
library(highcharter)#
hc <- highchart() %>%#
  hc_chart(type = "column") %>%#
  hc_title(text = "Denmark") %>%#
  hc_xAxis(categories = aq$Day) %>% #
  hc_add_series(data = aq$Temp,#
          name = "Temperature") %>%
runGitHub("ekstroem/useRapp")
options(repos="http://cran.rstudio.com")#
### Write down what package versions work with your R code, and#
### attempt to download and load those packages. The first argument is#
### the version of R that you used, e.g. "3.0.2" and then the rest of#
### the arguments are package versions. For#
### CRAN/Bioconductor/R-Forge/etc packages, write#
### e.g. RColorBrewer="1.0.5" and if RColorBrewer is not installed#
### then we use install.packages to get the most recent version, and#
### warn if the installed version is not the indicated version. For#
### GitHub packages, write "user/repo@commit"#
### e.g. "tdhock/animint@f877163cd181f390de3ef9a38bb8bdd0396d08a4" and#
### we use install_github to get it, if necessary.#
works_with_R <- function(Rvers,...){#
  pkg_ok_have <- function(pkg,ok,have){#
    stopifnot(is.character(ok))#
    if(!as.character(have) %in% ok){#
      warning("works with ",pkg," version ",#
              paste(ok,collapse=" or "),#
              ", have ",have)#
    }#
  }#
  pkg_ok_have("R",Rvers,getRversion())#
  pkg.vers <- list(...)#
  for(pkg.i in seq_along(pkg.vers)){#
    vers <- pkg.vers[[pkg.i]]#
    pkg <- if(is.null(names(pkg.vers))){#
      ""#
    }else{#
      names(pkg.vers)[[pkg.i]]#
    }#
    if(pkg == ""){# Then it is from GitHub.#
      ## suppressWarnings is quieter than quiet.#
      if(!suppressWarnings(require(requireGitHub))){#
        ## If requireGitHub is not available, then install it using#
        ## devtools.#
        if(!suppressWarnings(require(devtools))){#
          install.packages("devtools")#
          require(devtools)#
        }#
        install_github("tdhock/requireGitHub")#
        require(requireGitHub)#
      }#
      requireGitHub(vers)#
    }else{# it is from a CRAN-like repos.#
      if(!suppressWarnings(require(pkg, character.only=TRUE))){#
        install.packages(pkg)#
      }#
      pkg_ok_have(pkg, vers, packageVersion(pkg))#
      require(pkg, character.only=TRUE)#
    }#
  }#
}#
#
works_with_R(#
  "3.2.2",#
  ##rCharts="0.4.2",#
  ## "ramnathv/rCharts@faf2043f90e149d8620a570c78449079c6dbb6fb",#
  ## "ramnathv/rMaps@e08edfed5a1c1e02dcf04269f42120dd3224c952",#
  ## dygraphs="0.8",#
  ## igraph="0.7.1",#
  ## shiny="0.13.0",#
  ## "ekstroem/MESS@0a4218119fb9f6d2bd715ffb57b6cf2f24eee710",#
  ## metricsgraphics="0.9.0",#
  ##highcharter="1.0",#
  ##"jbkunst/highcharter@a8c917e91ae64efa66087d8fe883e1b403e177be",#
  ## "hadley/scales@2c3edf45de56d617444dc38e47e0404173817886",#
  ## "tdhock/ggplot2@a8b06ddb680acdcdbd927773b1011c562134e4d2",#
  ## "tdhock/animint@6b1c9e588b03f632cd39cdec9bbcfa730db9e889",#
  "tdhock/animint@f11dd20b8938808f2cbe06beebb85ea9e8d67a0d"#
  ## DiagrammeR="1.0"## DO NOT UNCOMMENT! Okay okay ;)#
)
install.packages("rmarkdown")
faithful
mcars
mtcars
quartz()
data(mtcars)
?mtcars
d <- data.frame(x = 1:10, y = letters[1:10], z = LETTERS[1:10])d[1]d[, 1]d[, "x", drop = FALSE]d[c("x", "z")]d[d$x >
d[d$x > 3, "y", drop = FALSE]d[2, ]
NA + 1sum(c(NA, 1, 2))median(c(NA, 1, 2, 3), na.rm = TRUE)length(c(NA, 2, 3, 4))3 == NANA == NATRUE | NA
length(c(1, 2, NULL, 4))sum(c(1, 2, NULL, 4))x <- NULLc(x, 2)
pi/02 * InfInf - 1e+10Inf + Inf3 < -InfInf == Inf
NaN + 1exp(NaN)
?inner_joint
??inner_joint
?filter
library(dplyr)
?filter
joe_chip_analytics = data_analytics %>%#
  inner_join(coders, statisticans) %>%#
  filter_(complex_data, language == "R", identity == "smart_analytics")
?is.true
!
!(T,F,T)
is.logic(T,F,T)
isTRUE
install.packages("h2o")
library(h2o)
h2o.init()
datasets = "https://raw.githubusercontent.com/DarrenCook/h2o/bk/datasets/"#
data = h2o.import_file(datasets + "iris_wheader.csv")
library(h2o)#
h2o.init(nthreads = -1)
datasets <- "https://raw.githubusercontent.com/DarrenCook/h2o/bk/datasets/"#
data <- h2o.importFile(paste0(datasets",iris_wheader.csv"))
data <- h2o.importFile(paste0(datasets",iris_wheader.csv"))
data <- h2o.importFile(paste0(datasets, "iris_wheader.csv"))
2 + 2
sqrt(4)
library(car)data(Womenlf)head(Womenlf)
Womenlf$status = ordered(Womenlf$partic,levels=c("not.work", "parttime", "fulltime"))
head(Womenlf)
summary(Womenlf)
library(MASS)fit.pom = polr(status ~ hincome + children,data=Womenlf)summary(fit.pom)
library(arm) # for the invlogit() functionp.pom = function(X, fit){b = coef(fit)cuts = fit$zetap1 = 1 - invlogit(X%*%b - cuts[1])p2 = invlogit(X%*%b - cuts[1]) -invlogit(X%*%b - cuts[2])p3 = invlogit(X%*%b - cuts[2])cbind(p1, p2, p3)
}
par(mfrow=c(1,2), cex=1.3)# children absentplot(c(1,45), c(0,1), type="n", main="Children absent",xlab="Husband's income", ylab="Pred. Probability")curve(p.pom(cbind(x,0), fit.pom)[,1], add=TRUE, lty=1)curve(p.pom(cbind(x,0), fit.pom)[,2], add=TRUE, lty=2)curve(p.pom(cbind(x,0), fit.pom)[,3], add=TRUE, lty=3)legend("topright", lty=1:3, c("not working", "part-time","full-time"), bty="n")# children presentplot(c(1,45), c(0,1), type="n", main="Children present",xlab="Husband's income", ylab="Pred. Probability")curve(p.pom(cbind(x,1), fit.pom)[,1], add=TRUE, lty=1)curve(p.pom(cbind(x,1), fit.pom)[,2], add=TRUE, lty=2)curve(p.pom(cbind(x,1), fit.pom)[,3], add=TRUE, lty=3)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)#
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)#
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))#
weight <- c(ctl, trt)#
lm.D9 <- lm(weight ~ group)#
lm.D90 <- lm(weight ~ group - 1) # omitting intercept#
#
anova(lm.D9)#
summary(lm.D90)#
#
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))#
plot(lm.D9, las = 1)      # Residuals, Fitted, ...#
par(opar)
2 + 2 # calculator
2 + 2  calculator
# calculator
2+ 2
2 + 2
x <- rnorm(100)
x
2 + 2
rnorm(100, 2, 10)
x + 2
x
2 + 2
x <- 1:10
x
max(x)
library(ggplot2)#
library(sf)#
library(sp)#
# -------#
# NUTS_Level_2__January_2018__Boundaries.shp#
#
#pointed to the shape file#
ukregion0 <- "gadm36_GBR_0.shp"#
#
#used the st_read() function to import it#
uk_region0 <- st_read(ukregion0)#
#
# take a look at the file#
View(uk_region0)#
#
# plot the disstricts #
ggplot(uk_region0) + #
  geom_sf()
